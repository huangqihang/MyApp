SSL	-Secure Sockets Layer
TLS -Transport Layer Security

HTTP	协议传输的数据都是未加密的是明文
HTTPS	传输的数据是经过加密的密文

SSL/TLS 用于对HTTP协议传输的数据进行加密

TLS/SSL中使用了非对称加密、对称加密以及HASH算法

非对称加密算法：RSA，DSA/DSS	-加解密速度快慢
	--->公钥、私钥不同，公钥公开给客户端使用，私钥则放在服务端保存
	--->客户端使用服务器的公钥对密码进行加密，消息发送到服务器后，服务器使用私钥解密，得到真正的密码
	--->公钥将被放在证书中，由浏览器从证书中提取后使用

对称加密算法：AES，RC4，3DES -加解密速度快
	--->加密、解密使用相同的密码
	--->服务器使用解密后的密码对密文解密，得到明文数据

HASH算法：MD5，SHA1，SHA256 
	--->比较摘要是否完全一致
	--->验证服务器接收到的数据的完整性
	
	
=====================================
浏览器
	1. 请求服务器某个网址，服务器返回证书(证书中包含：此证书的颁发机构、证书被使用在哪个网站上、该网站的公钥等)
	2. 浏览器从证书中提取出公钥: publickey-123
	3. 浏览器自己随机生成一个密码: random-secret-123
	4. 浏览器使用该密码对明文进行加密: 
		random-secret-123 -> "被发送的消息" => fjoiwenrqlwk1249fsda908q3wlzxljrwioeuriowq
	5. 浏览器使用某个HASH算法对明文生成摘要: 
		"被发送的消息" => 1238nclkzxx
	6. 浏览器使用服务器的公钥对刚才生成的密码进行加密：
		publickey-123 -> random-secret-123 => nfqlkkeu29089


服务器
	1. 服务器接收到密文后，使用自己的私钥计算出随机密码
	2. 使用密码对密文进行解密，获取到明文
	3. 使用摘要算法对明文生成摘要，比较与客户端发生的摘要是否相同


服务器的证书与网址不相符问题需要理解浏览器做了什么：
1、浏览器将自己支持的一套加密规则发送给网站。
2、网站从中选出一组加密算法与HASH算法，并将自己的身份信息以证书的形式发回给浏览器。证书里面包含了网站地址，加密公钥，以及证书的颁发机构等信息。
3、获得网站证书之后浏览器要做以下工作：
      a)  验证证书的合法性（颁发证书的机构是否合法，证书中包含的网站地址是否与正在访问的地址一致等），如果证书受信任，则浏览器栏里面会显示一个小锁头，否则会给出证书不受信的提示。
      b)  如果证书受信任，或者是用户接受了不受信的证书，浏览器会生成一串随机数的密码，并用证书中提供的公钥对此随机密码进行加密。
      c)  使用约定好的HASH计算握手消息，并使用生成的随机数对消息进行加密，最后将之前生成的所有信息发送给网站。
	
	
	